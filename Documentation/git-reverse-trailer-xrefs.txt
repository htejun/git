git-reverse-trailer-xrefs(1)
============================

NAME
----
git-reverse-trailer-xrefs - Record reverse-map of trailer commit references into notes

SYNOPSIS
--------
[verse]
`git reverse_trailer_xrefs` --xref-cherry-picks [--clear] [<options>] [<commit-ish>...]
`git reverse_trailer_xrefs` --trailer-prefix=<prefix> --ref=<notes-ref> [--tag=<tag>] [<options>] [<commit-ish>...]
`git reverse_trailer_xrefs` --ref=<notes-ref> --clear [<options>] [<commit-ish>...]


DESCRIPTION
-----------
Record or clear reverse-map of trailer commit references in the
specified notes ref.

Some commit trailers reference other commits. For example,
`git-cherry-pick -x` adds the following trailer to record the source
commit.
----------
(cherry picked from commit <source-commit-id>)
----------
The reverse mappings of such cross references can be useful. For
cherry-picks, it would allow finding all the cherry-picked commits of
a given source commit.  `git-reverse-trailer-xrefs` can be used to
create and maintain such reverse mappings in notes.

When used with `--xref-cherry-picks`, the cherry-pick trailers are
parsed from the specified commits and the reverse mappings are
recorded in the `refs/notes/xref-cherry-picks` notes of the source
commits in the following format.
----------
Cherry-picked-to: <destination-commit-id>
----------

When a note with its notes ref starting with `refs/notes/xref-` is
formatted to be displayed with the commit for, e.g., `git-show` or
`git-log`, the destination commit is followed recursively and the
matching notes are shown with increasing level of indentations.

`--trailer-prefix`, `--notes` and `--tag` can be used to use a custom
set of trailer, notes ref and reverse mapping tag.

OPTIONS
-------
<commit-ish>...::
	Commit-ish object names to describe.  Defaults to HEAD if omitted.

--xref-cherry-picks::
	Use the preset to reverse map `git-cherry-pick -x`
	trailers. `--trailer-prefix` is set to `(cherry-picked from
	commit `, `--notes` is set to `refs/notes/xref-cherry-picks`
	and `--tag` is set to `Cherry-picked-to`. This option can't be
	specified with the three preset options.

--trailer-prefix=<prefix>::
	Process trailers which start with <prefix>. It is matched
	character-by-character and should be followed by the
	referenced commit ID. When there are multiple matching
	trailers, the last one is used.

--notes=<notes-ref>::
	The notes ref to use for the reverse mapping. While this can
	be any notes ref, it is recommented to use ones starting with
	`refs/notes/xref-` as they are recognized as cross-referencing
	notes and handled specially when updating and showing.

--tag=<tag>::
	Optional tag to use when generating reverse reference
	notes. If specified, each note line is formatted as `<tag>:
	<commit-id>`; otherwise, `<commit-id>`.

--clear::
	Instead of creating reverse mapping notes, clear them from the
	specified commits.


EXAMPLES
--------

Assume the following history. Development is happening in "master" and
releases are branched off and fixes are cherry-picked into them.

------------
	D'---E'' release-B
       /
      C'      E' release-D
     /       /
A---B---C---D---E master
------------

The following cherry-picks took place.

------------
C -> C'
D -> D'
E -> E' -> E''
------------

The reverse mappings for all commits can be created using the
following command.

------------
$ git reverse-trailer-xrefs --all --xref-cherry-picks
------------

With the notes added, where each commit ended up can be easily
determined.

------------
$ git log --notes=xref-cherry-picks --oneline | git name-rev --name-only --stdin
4b165af commit E
Notes (xref-cherry-picks):
    Cherry-picked-to: release-D
    Cherry-picked-to:   release-B

82bf1f3 commit D
Notes (xref-cherry-picks):
    Cherry-picked-to: release-B~1

364eccf commit C
Notes (xref-cherry-picks):
    Cherry-picked-to: release-B~2

ed3adf3 commit B
ddd1bf2 commit A
------------


Keeping xref-cherry-picks up-to-date
------------------------------------

Reverse-maps can be kept-up incrementally with hooks. For example, to
keep xref-cherry-picks up-to-date, `git-reverse-trailer-xrefs` should
be invoked on new cherry-picks and fetched commits. See
`hooks/post-cherry-pick.sample` and `hooks/post-fetch.sample`.


GIT
---
Part of the linkgit:git[1] suite
